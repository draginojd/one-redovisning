{"ast":null,"code":"import React from'react';import{motion}from'framer-motion';import{usePrefersReducedMotion}from'../../hooks/usePrefersReducedMotion';/*\r\n * AnimatedText\r\n * Splits provided text into words and animates them with a subtle upward fade-in.\r\n * Props:\r\n *  - as: heading/tag to render (default 'span')\r\n *  - text: string to animate\r\n *  - delay: initial delay before animation starts\r\n *  - align: text alignment class override\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";export function AnimatedText(_ref){let{as:Tag='span',text,delay=0,align,className=''}=_ref;const reduce=usePrefersReducedMotion();if(reduce)return/*#__PURE__*/_jsx(Tag,{className:className,children:text});const words=text.split(/\\s+/);const container={hidden:{opacity:0},visible:function(){let d=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return{opacity:1,transition:{delay:d,staggerChildren:0.045}};}};const child={hidden:{y:18,opacity:0,filter:'blur(4px)'},visible:{y:0,opacity:1,filter:'blur(0)',transition:{duration:0.52,ease:[0.22,0.9,0.24,1]}}};return/*#__PURE__*/_jsx(motion.span,{className:\"animated-text inline-block \".concat(className),style:{display:'inline-block'},variants:container,custom:delay,initial:\"hidden\",whileInView:\"visible\",viewport:{once:true,amount:0.6},children:words.map((w,i)=>/*#__PURE__*/_jsx(motion.span,{className:\"animated-word\",style:{display:'inline-block',whiteSpace:'pre'},variants:child,children:w+(i<words.length-1?' ':'')},i))});}","map":{"version":3,"names":["React","motion","usePrefersReducedMotion","jsx","_jsx","AnimatedText","_ref","as","Tag","text","delay","align","className","reduce","children","words","split","container","hidden","opacity","visible","d","arguments","length","undefined","transition","staggerChildren","child","y","filter","duration","ease","span","concat","style","display","variants","custom","initial","whileInView","viewport","once","amount","map","w","i","whiteSpace"],"sources":["C:/Users/armin/Desktop/vscode-projects/one-redovisning/client/src/components/Animated/AnimatedText.js"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { usePrefersReducedMotion } from '../../hooks/usePrefersReducedMotion';\r\n\r\n/*\r\n * AnimatedText\r\n * Splits provided text into words and animates them with a subtle upward fade-in.\r\n * Props:\r\n *  - as: heading/tag to render (default 'span')\r\n *  - text: string to animate\r\n *  - delay: initial delay before animation starts\r\n *  - align: text alignment class override\r\n */\r\nexport function AnimatedText({ as: Tag = 'span', text, delay = 0, align, className = '' }) {\r\n  const reduce = usePrefersReducedMotion();\r\n  if (reduce) return <Tag className={className}>{text}</Tag>;\r\n\r\n  const words = text.split(/\\s+/);\r\n\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    visible: (d = 0) => ({\r\n      opacity: 1,\r\n      transition: {\r\n        delay: d,\r\n        staggerChildren: 0.045,\r\n      }\r\n    })\r\n  };\r\n\r\n  const child = {\r\n    hidden: { y: 18, opacity: 0, filter: 'blur(4px)' },\r\n    visible: { y: 0, opacity: 1, filter: 'blur(0)', transition: { duration: 0.52, ease: [0.22, 0.9, 0.24, 1] } }\r\n  };\r\n\r\n  return (\r\n    <motion.span\r\n      className={`animated-text inline-block ${className}`}\r\n      style={{ display: 'inline-block' }}\r\n      variants={container}\r\n      custom={delay}\r\n      initial=\"hidden\"\r\n      whileInView=\"visible\"\r\n      viewport={{ once: true, amount: 0.6 }}\r\n    >\r\n      {words.map((w, i) => (\r\n        <motion.span\r\n          key={i}\r\n          className=\"animated-word\"\r\n          style={{ display: 'inline-block', whiteSpace: 'pre' }}\r\n          variants={child}\r\n        >{w + (i < words.length - 1 ? ' ' : '')}</motion.span>\r\n      ))}\r\n    </motion.span>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,eAAe,CACtC,OAASC,uBAAuB,KAAQ,qCAAqC,CAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA,OAAAC,GAAA,IAAAC,IAAA,yBASA,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA+D,IAA9D,CAAEC,EAAE,CAAEC,GAAG,CAAG,MAAM,CAAEC,IAAI,CAAEC,KAAK,CAAG,CAAC,CAAEC,KAAK,CAAEC,SAAS,CAAG,EAAG,CAAC,CAAAN,IAAA,CACvF,KAAM,CAAAO,MAAM,CAAGX,uBAAuB,CAAC,CAAC,CACxC,GAAIW,MAAM,CAAE,mBAAOT,IAAA,CAACI,GAAG,EAACI,SAAS,CAAEA,SAAU,CAAAE,QAAA,CAAEL,IAAI,CAAM,CAAC,CAE1D,KAAM,CAAAM,KAAK,CAAGN,IAAI,CAACO,KAAK,CAAC,KAAK,CAAC,CAE/B,KAAM,CAAAC,SAAS,CAAG,CAChBC,MAAM,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAC,CACtBC,OAAO,CAAE,QAAAA,CAAA,KAAC,CAAAC,CAAC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,OAAM,CACnBH,OAAO,CAAE,CAAC,CACVM,UAAU,CAAE,CACVf,KAAK,CAAEW,CAAC,CACRK,eAAe,CAAE,KACnB,CACF,CAAC,EACH,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZT,MAAM,CAAE,CAAEU,CAAC,CAAE,EAAE,CAAET,OAAO,CAAE,CAAC,CAAEU,MAAM,CAAE,WAAY,CAAC,CAClDT,OAAO,CAAE,CAAEQ,CAAC,CAAE,CAAC,CAAET,OAAO,CAAE,CAAC,CAAEU,MAAM,CAAE,SAAS,CAAEJ,UAAU,CAAE,CAAEK,QAAQ,CAAE,IAAI,CAAEC,IAAI,CAAE,CAAC,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAC7G,CAAC,CAED,mBACE3B,IAAA,CAACH,MAAM,CAAC+B,IAAI,EACVpB,SAAS,+BAAAqB,MAAA,CAAgCrB,SAAS,CAAG,CACrDsB,KAAK,CAAE,CAAEC,OAAO,CAAE,cAAe,CAAE,CACnCC,QAAQ,CAAEnB,SAAU,CACpBoB,MAAM,CAAE3B,KAAM,CACd4B,OAAO,CAAC,QAAQ,CAChBC,WAAW,CAAC,SAAS,CACrBC,QAAQ,CAAE,CAAEC,IAAI,CAAE,IAAI,CAAEC,MAAM,CAAE,GAAI,CAAE,CAAA5B,QAAA,CAErCC,KAAK,CAAC4B,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,gBACdzC,IAAA,CAACH,MAAM,CAAC+B,IAAI,EAEVpB,SAAS,CAAC,eAAe,CACzBsB,KAAK,CAAE,CAAEC,OAAO,CAAE,cAAc,CAAEW,UAAU,CAAE,KAAM,CAAE,CACtDV,QAAQ,CAAET,KAAM,CAAAb,QAAA,CAChB8B,CAAC,EAAIC,CAAC,CAAG9B,KAAK,CAACQ,MAAM,CAAG,CAAC,CAAG,GAAG,CAAG,EAAE,CAAC,EAJhCsB,CAI8C,CACtD,CAAC,CACS,CAAC,CAElB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}