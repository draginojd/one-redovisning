{"ast":null,"code":"import{useEffect,useState}from'react';export function useMediaQuery(query){const[match,setMatch]=useState(false);useEffect(()=>{const mq=window.matchMedia(query);const update=()=>setMatch(mq.matches);update();mq.addEventListener?mq.addEventListener('change',update):mq.addListener(update);return()=>{mq.removeEventListener?mq.removeEventListener('change',update):mq.removeListener(update);};},[query]);return match;}","map":{"version":3,"names":["useEffect","useState","useMediaQuery","query","match","setMatch","mq","window","matchMedia","update","matches","addEventListener","addListener","removeEventListener","removeListener"],"sources":["C:/Users/armin/Desktop/vscode-projects/one-redovisning/client/src/hooks/useMediaQuery.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport function useMediaQuery(query){\r\n  const [match, setMatch] = useState(false);\r\n  useEffect(()=>{\r\n    const mq = window.matchMedia(query);\r\n    const update = () => setMatch(mq.matches);\r\n    update();\r\n    mq.addEventListener ? mq.addEventListener('change', update) : mq.addListener(update);\r\n    return () => {\r\n      mq.removeEventListener ? mq.removeEventListener('change', update) : mq.removeListener(update);\r\n    };\r\n  }, [query]);\r\n  return match;\r\n}\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,MAAO,SAAS,CAAAC,aAAaA,CAACC,KAAK,CAAC,CAClC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CACzCD,SAAS,CAAC,IAAI,CACZ,KAAM,CAAAM,EAAE,CAAGC,MAAM,CAACC,UAAU,CAACL,KAAK,CAAC,CACnC,KAAM,CAAAM,MAAM,CAAGA,CAAA,GAAMJ,QAAQ,CAACC,EAAE,CAACI,OAAO,CAAC,CACzCD,MAAM,CAAC,CAAC,CACRH,EAAE,CAACK,gBAAgB,CAAGL,EAAE,CAACK,gBAAgB,CAAC,QAAQ,CAAEF,MAAM,CAAC,CAAGH,EAAE,CAACM,WAAW,CAACH,MAAM,CAAC,CACpF,MAAO,IAAM,CACXH,EAAE,CAACO,mBAAmB,CAAGP,EAAE,CAACO,mBAAmB,CAAC,QAAQ,CAAEJ,MAAM,CAAC,CAAGH,EAAE,CAACQ,cAAc,CAACL,MAAM,CAAC,CAC/F,CAAC,CACH,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CACX,MAAO,CAAAC,KAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}